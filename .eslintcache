[{"C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\components\\layout\\footer\\hooks\\use-fetch-cotent.tsx":"1","C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\components\\layout\\layout.tsx":"2","C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\createPages\\templates\\home.tsx":"3","C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\components\\layout\\footer\\footer.tsx":"4"},{"size":0,"mtime":1632551744811,"results":"5","hashOfConfig":"6"},{"size":3273,"mtime":1632551744869,"results":"7","hashOfConfig":"6"},{"size":2057,"mtime":1632551744864,"results":"8","hashOfConfig":"6"},{"size":5069,"mtime":1632577401781,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"44dfim",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\components\\layout\\footer\\hooks\\use-fetch-cotent.tsx",[],"C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\components\\layout\\layout.tsx",["18","19"],"C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\createPages\\templates\\home.tsx",[],"C:\\Users\\adedayo.adegboye\\Desktop\\azafly\\azafly-web-gatsby\\src\\components\\layout\\footer\\footer.tsx",["20","21","22"],{"ruleId":"23","severity":1,"message":"24","line":48,"column":14,"nodeType":"25","messageId":"26","endLine":48,"endColumn":17,"suggestions":"27"},{"ruleId":"23","severity":1,"message":"24","line":49,"column":19,"nodeType":"25","messageId":"26","endLine":49,"endColumn":22,"suggestions":"28"},{"ruleId":"29","severity":1,"message":"30","line":14,"column":10,"nodeType":"31","messageId":"32","endLine":14,"endColumn":24},{"ruleId":"29","severity":1,"message":"33","line":14,"column":26,"nodeType":"31","messageId":"32","endLine":14,"endColumn":33},{"ruleId":"23","severity":1,"message":"24","line":41,"column":9,"nodeType":"25","messageId":"26","endLine":41,"endColumn":12,"suggestions":"34"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["35","36"],["37","38"],"@typescript-eslint/no-unused-vars","'useStaticQuery' is defined but never used.","Identifier","unusedVar","'graphql' is defined but never used.",["39","40"],{"messageId":"41","fix":"42","desc":"43"},{"messageId":"44","fix":"45","desc":"46"},{"messageId":"41","fix":"47","desc":"43"},{"messageId":"44","fix":"48","desc":"46"},{"messageId":"41","fix":"49","desc":"43"},{"messageId":"44","fix":"50","desc":"46"},"suggestUnknown",{"range":"51","text":"52"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"51","text":"53"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"54","text":"52"},{"range":"54","text":"53"},{"range":"55","text":"52"},{"range":"55","text":"53"},[1745,1748],"unknown","never",[1768,1771],[923,926]]